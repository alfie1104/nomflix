{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","Title","span","_templateObject2","Grid","_templateObject3","Section","_ref","title","children","react_default","a","createElement","Loader_templateObject","Loader","Loader_Container","role","aria-label","Message_templateObject","Text","Message_templateObject2","props","color","Message","text","Message_Container","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","Poster_templateObject3","ImageContainer","_templateObject4","_templateObject5","Year","_templateObject6","Poster","id","imageUrl","rating","year","_ref$isMovie","isMovie","Link","to","concat","Poster_Container","require","Poster_Title","length","substring","HomePresenter_templateObject","HomePresenter","nowPlaying","upcoming","popular","error","loading","Fragment","Helmet_default","HomePresenter_Container","Components_Section","map","movie","Components_Poster","key","original_title","poster_path","vote_average","release_date","Components_Message","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","_this$state","Home_HomePresenter","React","Component","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","show","original_name","first_air_date","TVContainer","TV_TVPresenter","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","SearchPresenter_Container","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","_this","searchByTerm","target","_callee","_ref2","_ref3","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","Search_SearchPresenter","Header","header","Header_templateObject","List","ul","Header_templateObject2","Item","li","Header_templateObject3","current","SLink","Header_templateObject4","withRouter","pathname","location","DetailPresenter_templateObject","Backdrop","DetailPresenter_templateObject2","bgImage","Content","DetailPresenter_templateObject3","Cover","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","h3","DetailPresenter_templateObject6","ItemContainer","_templateObject7","_templateObject8","Divider","_templateObject9","Overview","_templateObject10","DetailPresenter","result","DetailPresenter_Container","backdrop_path","DetailPresenter_Title","DetailPresenter_Item","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","includes","match","push","history","parsedId","parseInt","isNaN","Detail_DetailPresenter","Router","BrowserRouter","Components_Header","Switch","Route","path","exact","component","Home","TV","Search","Detail","Redirect","from","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.37be56ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    :not(:last-child){\r\n        margin-bottom:50px;\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    font-size:14px;\r\n    font-weight:600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n    margin-top:25px;\r\n    display:grid;\r\n    grid-template-columns:repeat(auto-fill, 125px);\r\n    grid-gap:25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n    <Container>\r\n        <Title>{title}</Title>\r\n        <Grid>{children}</Grid>\r\n    </Container>\r\n\r\n);\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n\r\nexport default Section;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    height:100vh;\r\n    width:100vw;\r\n    display:flex;\r\n    justify-content:center;\r\n    font-size:28px;\r\n    margin-top:20px;\r\n`;\r\n\r\n//vh : viewport height\r\nexport default () => (\r\n    <Container>\r\n        <span role=\"img\" aria-label=\"Loading\">\r\n            O\r\n        </span>\r\n    </Container>\r\n);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    width:100vw;\r\n    display:flex;\r\n    justify-content:center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color:${props => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n    <Container>\r\n        <Text>\r\n            {text}\r\n        </Text>\r\n    </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n    font-size:12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n    background-image:url(${props => props.bgUrl});\r\n    height:180px;\r\n    background-size:cover;\r\n    border-radius:4px;\r\n    background-position:center center;\r\n    transition : opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n    bottom:5px;\r\n    right:5px;\r\n    position:absolute;\r\n    opacity:0;\r\n    span {\r\n        color:#FFFF00;\r\n    }\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n    margin-bottom:5px;\r\n    position:relative;\r\n    &:hover{\r\n        ${Image}{\r\n            opacity:0.3;\r\n        }\r\n        ${Rating}{\r\n            opacity:1;\r\n        }\r\n    }\r\n`;\r\n\r\nconst Title = styled.span`\r\n    display:block;\r\n    margin-bottom:3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n    font-size:10px;\r\n    color:rgba(255,255,255,0.5);\r\n`;\r\n\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n        <Container>\r\n            <ImageContainer>\r\n                <Image\r\n                    bgUrl={imageUrl\r\n                        ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n                        : require(\"../assets/noPosterSmall.png\")\r\n                    }\r\n                />\r\n                <Rating><span role=\"img\" aria-label=\"rating\">★ </span>{rating}/10</Rating>\r\n            </ImageContainer>\r\n            <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\r\n            <Year>{year}</Year>\r\n        </Container>\r\n    </Link >\r\n);\r\n\r\nPoster.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    imageUrl: PropTypes.string,\r\n    title: PropTypes.string.isRequired,\r\n    rating: PropTypes.number,\r\n    year: PropTypes.string,\r\n    isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\"; //페이지 마다 다른 타이틀 적용을 위해 react-helmet사용\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding:20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) =>\r\n    <>\r\n        <Helmet>\r\n            <title>Movie | Nomflix</title>\r\n        </Helmet>\r\n        {loading ? <Loader /> : (\r\n            <Container>\r\n\r\n                {nowPlaying && nowPlaying.length > 0 && (\r\n                    <Section title=\"Now Playing\">\r\n                        {nowPlaying.map(movie => (\r\n                            <Poster\r\n                                key={movie.id}\r\n                                title={movie.original_title}\r\n                                id={movie.id}\r\n                                imageUrl={movie.poster_path}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date.substring(0, 4)}\r\n                                isMovie={true} />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {popular && popular.length > 0 && (\r\n                    <Section title=\"Popular Movies\">\r\n                        {popular.map(movie => (\r\n                            <Poster\r\n                                key={movie.id}\r\n                                title={movie.original_title}\r\n                                id={movie.id}\r\n                                imageUrl={movie.poster_path}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date.substring(0, 4)}\r\n                                isMovie={true} />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {upcoming && upcoming.length > 0 && (\r\n                    <Section title=\"Upcoming Movies\">\r\n                        {upcoming.map(movie => (\r\n                            <Poster\r\n                                key={movie.id}\r\n                                title={movie.original_title}\r\n                                id={movie.id}\r\n                                imageUrl={movie.poster_path}\r\n                                rating={movie.vote_average}\r\n                                year={movie.release_date.substring(0, 4)}\r\n                                isMovie={true} />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {error && <Message color=\"#e74c3c\" text={error} />}\r\n            </Container>\r\n        )}\r\n    </>;\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying: PropTypes.array,\r\n    upcoming: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default HomePresenter;","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3/\",\r\n    params: {\r\n        api_key: \"8613018dd2c57bfbee7b8555026b46ab\",\r\n        language: \"en-US\"\r\n    }\r\n});\r\n\r\nexport const moviesApi = {\r\n    nowPlaying: () => api.get(\"movie/now_playing\"),\r\n    upcoming: () => api.get(\"movie/upcoming\"),\r\n    popular: () => api.get(\"movie/popular\"),\r\n    movieDetail: (id) =>\r\n        api.get(`movie/${id}`, {\r\n            params: {\r\n                append_to_response: \"videos\"\r\n            }\r\n        }),\r\n    search: (term) => api.get(\"search/movie\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n};\r\n\r\nexport const tvApi = {\r\n    topRated: () => api.get(\"tv/top_rated\"),\r\n    popular: () => api.get(\"tv/popular\"),\r\n    airingToday: () => api.get(\"tv/airing_today\"),\r\n    showDetail: (id) =>\r\n        api.get(`tv/${id}`, {\r\n            params: {\r\n                append_to_response: \"videos\"\r\n            }\r\n        }),\r\n    search: (term) => api.get(\"search/tv\", {\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n};","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        nowPlaying: null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const {\r\n                data: { results: nowPlaying }\r\n            } = await moviesApi.nowPlaying();\r\n            const {\r\n                data: { results: upcoming }\r\n            } = await moviesApi.upcoming();\r\n            const {\r\n                data: { results: popular }\r\n            } = await moviesApi.popular();\r\n\r\n            this.setState({\r\n                nowPlaying, upcoming, popular\r\n            });\r\n        } catch {\r\n            this.setState({\r\n                error: \"Can't find movie information.\"\r\n            });\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n\r\n        return (\r\n            <HomePresenter\r\n                nowPlaying={nowPlaying}\r\n                upcoming={upcoming}\r\n                popular={popular}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding:20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) =>\r\n    <>\r\n        <Helmet>\r\n            <title>TV | Nomflix</title>\r\n        </Helmet>\r\n        {loading ? <Loader /> : (\r\n            <Container>\r\n                {topRated && topRated.length > 0 && (\r\n                    <Section title=\"Top Rated Shows\">\r\n                        {topRated.map(show => (\r\n                            <Poster\r\n                                key={show.id}\r\n                                title={show.original_name}\r\n                                id={show.id}\r\n                                imageUrl={show.poster_path}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date.substring(0, 4)}\r\n                                isMovie={false}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {popular && popular.length > 0 && (\r\n                    <Section title=\"Popular Shows\">\r\n                        {popular.map(show => (\r\n                            <Poster\r\n                                key={show.id}\r\n                                title={show.original_name}\r\n                                id={show.id}\r\n                                imageUrl={show.poster_path}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date.substring(0, 4)}\r\n                                isMovie={false}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {airingToday && airingToday.length > 0 && (\r\n                    <Section title=\"Airing Today\">\r\n                        {airingToday.map(show => (\r\n                            <Poster\r\n                                key={show.id}\r\n                                title={show.original_name}\r\n                                id={show.id}\r\n                                imageUrl={show.poster_path}\r\n                                rating={show.vote_average}\r\n                                year={show.first_air_date.substring(0, 4)}\r\n                                isMovie={false}\r\n                            />\r\n                        ))}\r\n                    </Section>\r\n                )}\r\n                {error && <Message color=\"#e74c3c\" text={error} />}\r\n            </Container>\r\n        )}\r\n    </>;\r\n\r\nTVPresenter.propTypes = {\r\n    topRated: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    airingToday: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        topRated: null,\r\n        popular: null,\r\n        airingToday: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const {\r\n                data: { results: topRated }\r\n            } = await tvApi.topRated();\r\n            const {\r\n                data: { results: popular }\r\n            } = await tvApi.popular();\r\n            const {\r\n                data: { results: airingToday }\r\n            } = await tvApi.airingToday();\r\n            this.setState({\r\n                topRated, popular, airingToday\r\n            });\r\n        } catch{\r\n            this.setState({\r\n                error: \"Can't find tv information.\"\r\n            });\r\n        } finally {\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { topRated, popular, airingToday, error, loading } = this.state;\r\n\r\n        return (\r\n            <TVPresenter\r\n                topRated={topRated}\r\n                popular={popular}\r\n                airingToday={airingToday}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n    padding:20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n    margin-bottom:50px;\r\n    width:100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    all:unset;\r\n    font-size:28px;\r\n    width:100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n    movieResults,\r\n    tvResults,\r\n    searchTerm,\r\n    error,\r\n    loading,\r\n    handleSubmit,\r\n    updateTerm\r\n}) => (\r\n        <Container>\r\n            <Helmet>\r\n                <title>Search | Nomflix</title>\r\n            </Helmet>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Input placeholder=\"Search Movies or TV shows...\" value={searchTerm} onChange={updateTerm} />\r\n            </Form>\r\n            {loading ? <Loader /> : <>\r\n                {movieResults && movieResults.length > 0 && (\r\n                    <Section title=\"Movie Results\">{movieResults.map(movie => (\r\n                        <Poster\r\n                            key={movie.id}\r\n                            title={movie.original_title}\r\n                            id={movie.id}\r\n                            imageUrl={movie.poster_path}\r\n                            rating={movie.vote_average}\r\n                            year={movie.release_date.substring(0, 4)}\r\n                            isMovie={true}\r\n                        />\r\n                    ))}\r\n                    </Section>\r\n                )}\r\n                {tvResults && tvResults.length > 0 && (\r\n                    <Section title=\"TV Show Results\">{tvResults.map(show => (\r\n                        <Poster\r\n                            key={show.id}\r\n                            title={show.original_name}\r\n                            id={show.id}\r\n                            imageUrl={show.poster_path}\r\n                            rating={show.vote_average}\r\n                            year={show.first_air_date.substring(0, 4)}\r\n                            isMovie={false}\r\n                        />\r\n                    ))}\r\n                    </Section>\r\n                )}\r\n            </>}\r\n            {error && <Message color=\"#e74c3c\" text={error} />}\r\n            {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && (\r\n                <Message text=\"Noting found\" color=\"#95a5a6\" />)\r\n            }\r\n        </Container>)\r\n    ;\r\n\r\nSearchPresenter.propTypes = {\r\n    movieResults: PropTypes.array,\r\n    tvResults: PropTypes.array,\r\n    searchTerm: PropTypes.string,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: \"\",\r\n        error: null,\r\n        loading: false\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const { searchTerm } = this.state;\r\n        if (searchTerm !== \"\") {\r\n            this.searchByTerm();\r\n        }\r\n    }\r\n\r\n    updateTerm = (event) => {\r\n        const { target: { value } } = event;\r\n        this.setState({\r\n            searchTerm: value\r\n        });\r\n    }\r\n\r\n    searchByTerm = async (term) => {\r\n        const { searchTerm } = this.state;\r\n        this.setState({ loading: true });\r\n        try {\r\n            const {\r\n                data: { results: movieResults }\r\n            } = await moviesApi.search(searchTerm);\r\n            const {\r\n                data: { results: tvResults }\r\n            } = await tvApi.search(searchTerm);\r\n            this.setState({\r\n                movieResults,\r\n                tvResults\r\n            });\r\n        } catch{\r\n            this.setState({ error: \"Can't find results.\" });\r\n        } finally {\r\n            this.setState({ loading: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { movieResults, tvResults, searchTerm, error, loading } = this.state;\r\n        return (\r\n            <SearchPresenter\r\n                movieResults={movieResults}\r\n                tvResults={tvResults}\r\n                searchTerm={searchTerm}\r\n                error={error}\r\n                loading={loading}\r\n                handleSubmit={this.handleSubmit}\r\n                updateTerm={this.updateTerm}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n    color:white;\r\n    position:fixed; //Scroll 해도 헤더가 고정되어 있도록 position을 fixed로 설정\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:50px;\r\n    display:flex;\r\n    align-items:center;\r\n\r\n    background-color:rgba(20,20,20,0.8);\r\n    z-index:10;\r\n    box-shadow:0px 1px 5px 2px rgba(0,0,0,0.8); //수평방향-Offset-길이  수직그림자-Offset-길이  그림자-흐림-반경  그림자-확산-거리\r\n`;\r\n\r\nconst List = styled.ul`\r\n    display:flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n    width:50px;\r\n    height:50px;\r\n    text-align:center;\r\n    border-bottom:3px solid ${props => (props.current ? \"#3498db\" : \"transparent\")};\r\n    transition:border-bottom .5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n    height:50px;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n    <Header>\r\n        <List>\r\n            <Item current={pathname === \"/\"}>\r\n                <SLink to=\"/\">Movies</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/tv\"}>\r\n                <SLink to=\"/tv\">TV</SLink>\r\n            </Item>\r\n            <Item current={pathname === \"/search\"}>\r\n                <SLink to=\"/search\">Search</SLink>\r\n            </Item>\r\n        </List>\r\n    </Header>\r\n));","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Loader\";\r\n\r\nconst Container = styled.div`\r\n    height:calc(100vh - 50px);\r\n    width:100%;\r\n    position:relative;\r\n    padding:50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n    position:absolute;\r\n    top:0;\r\n    left:0;\r\n    width:100%;\r\n    height:100%;\r\n    background-image:url(${props => props.bgImage});\r\n    background-position:center center;\r\n    background-size:cover;\r\n    filter:blur(3px);\r\n    opacity:0.5;\r\n    z-index:0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    display:flex;\r\n    width:100%;\r\n    position:relative;\r\n    z-index:1;\r\n    height:100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n    width:30%;\r\n    background-image:url(${props => props.bgImage});\r\n    background-position:center center;\r\n    background-size:cover;\r\n    height:100%;\r\n    border-radius:5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    width : 70%;\r\n    margin-left:10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n    font-size:32px;\r\n    margin-bottom:10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n    margin:20px 0;\r\n`;\r\n\r\nconst Item = styled.span`\r\n`;\r\n\r\nconst Divider = styled.span`\r\n    margin:0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n    font-size:12px;\r\n    opacity:0.7;\r\n    line-height:1.5;\r\n    width:50%;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, error, loading }) => (\r\n    loading ? (\r\n        <>\r\n            <Helmet>\r\n                <title>Loading | Nomflix</title>\r\n            </Helmet>\r\n            <Loader />\r\n        </>\r\n    ) : (\r\n            <Container>\r\n                <Helmet>\r\n                    <title>{result.original_title ? result.original_title : result.original_name} | Nomflix</title>\r\n                </Helmet>\r\n                <Backdrop bgImage={result.backdrop_path\r\n                    ? `https://image.tmdb.org/t/p/original${result.backdrop_path}`\r\n                    : require(\"../../assets/noPosterSmall.png\")} />\r\n                <Content>\r\n                    <Cover bgImage={result.poster_path\r\n                        ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                        : require(\"../../assets/noPosterSmall.png\")} />\r\n                    <Data>\r\n                        <Title>{result.original_title ? result.original_title : result.original_name}</Title>\r\n                        <ItemContainer>\r\n                            <Item>\r\n                                {result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4)}\r\n                            </Item>\r\n                            <Divider>|</Divider>\r\n                            <Item>\r\n                                {result.runtime ? result.runtime : result.episode_run_time[0]} Min.\r\n                        </Item>\r\n                            <Divider>|</Divider>\r\n                            <Item>\r\n                                {result.genres &&\r\n                                    result.genres.map((genre, index) =>\r\n                                        index === result.genres.length - 1 ? genre.name : `${genre.name}/`\r\n                                    )}\r\n                            </Item>\r\n                        </ItemContainer>\r\n                        <Overview>\r\n                            {result.overview}\r\n                        </Overview>\r\n                    </Data>\r\n                </Content>\r\n            </Container>\r\n        )\r\n);\r\n\r\nDetailPresenter.propTypes = {\r\n    result: PropTypes.object,\r\n    error: PropTypes.string,\r\n    loading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const { location: { pathname } } = props;\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie: pathname.includes(\"/movie/\") //movie 페이지인지 확인해서 this.isMovie값을 변경. 화면을 rerender하지 않기 위해 state에 넣지 않음\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const {\r\n            match: {\r\n                params: {\r\n                    id\r\n                }\r\n            },\r\n            history: { push },\r\n        } = this.props;\r\n\r\n        const { isMovie } = this.state;\r\n        const parsedId = parseInt(id);\r\n        if (isNaN(parsedId)) {\r\n            return push(\"/\"); //push(\"/\")를 통해 사용자를 홈 화면으로 보내고, 함수를 종료시킴(return)\r\n        }\r\n\r\n        let result = null;\r\n\r\n        try {\r\n            if (isMovie) {\r\n                ({\r\n                    data: result\r\n                } = await moviesApi.movieDetail(parsedId));\r\n            } else {\r\n                ({\r\n                    data: result\r\n                } = await tvApi.showDetail(parsedId));\r\n            }\r\n        } catch{\r\n            this.setState({ error: \"Can't find anything.\" });\r\n        } finally {\r\n            this.setState({ loading: false, result });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { result, error, loading } = this.state;\r\n        return (\r\n            <DetailPresenter\r\n                result={result}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Header from \"Components/Header\";\r\nimport Detail from \"../Routes/Detail\";\r\n\r\n//한번에 하나의 라우터만 렌더링 하기 위해서 Switch 사용\r\nexport default () => (\r\n    <Router>\r\n        <>\r\n            <Header />\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home} />\r\n                <Route path=\"/tv\" exact component={TV} />\r\n                <Route path=\"/search\" exact component={Search} />\r\n                <Route path=\"/movie/:id\" component={Detail} />\r\n                <Route path=\"/show/:id\" component={Detail} />\r\n                <Redirect from=\"*\" to=\"/\" />\r\n            </Switch>\r\n        </>\r\n    </Router>\r\n);","import { createGlobalStyle } from \"styled-components\"; //웹사이트 전체에 적용되는 global CSS 생성 모듈\r\nimport { reset } from \"styled-reset\"; //기본적으로 적용된 css 설정을 모두 없애기 위해 reset 사용\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family: BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", sans-serif;\r\n        font-size:12px;\r\n        background-color:rgba(20,20,20,1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;","import React, { Component } from 'react';\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\nimport \"./api\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}